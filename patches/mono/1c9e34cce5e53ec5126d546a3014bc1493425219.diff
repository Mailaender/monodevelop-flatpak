diff --git a/mono/metadata/appdomain.c b/mono/metadata/appdomain.c
index 833d5fa..4a72f25 100644
--- a/mono/metadata/appdomain.c
+++ b/mono/metadata/appdomain.c
@@ -343,8 +343,14 @@ mono_check_corlib_version (void)
 	int version = mono_get_corlib_version ();
 	if (version != MONO_CORLIB_VERSION)
 		return g_strdup_printf ("expected corlib version %d, found %d.", MONO_CORLIB_VERSION, version);
-	else
-		return NULL;
+
+	/* Check that the managed and unmanaged layout of MonoInternalThread matches */
+	guint32 native_offset = (guint32) MONO_STRUCT_OFFSET (MonoInternalThread, last);
+	guint32 managed_offset = mono_field_get_offset (mono_class_get_field_from_name (mono_defaults.internal_thread_class, "last"));
+	if (native_offset != managed_offset)
+		return g_strdup_printf ("expected InternalThread.last field offset %u, found %u. See InternalThread.last comment", native_offset, managed_offset);
+
+	return NULL;
 }
 
 /**
diff --git a/mono/metadata/threads.c b/mono/metadata/threads.c
index ab3a11e..7954a8f 100644
--- a/mono/metadata/threads.c
+++ b/mono/metadata/threads.c
@@ -2849,9 +2849,6 @@ void mono_thread_init (MonoThreadStartCB start_cb,
 	 * anything up.
 	 */
 	GetCurrentProcess ();
-
-	/* Check that the managed and unmanaged layout of MonoInternalThread matches */
-	g_assert (MONO_STRUCT_OFFSET (MonoInternalThread, last) == mono_field_get_offset (mono_class_get_field_from_name (mono_defaults.internal_thread_class, "last")));
 }
 
 void mono_thread_cleanup (void)
